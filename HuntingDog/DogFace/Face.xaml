<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale"
             xmlns:my="clr-namespace:HuntingDog.DogFace"
             xmlns:properties="clr-namespace:HuntingDog.Properties"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d"
             x:Class="HuntingDog.DogFace.Face"
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded" PreviewKeyDown="UserControl_PreviewKeyDown">

    <UserControl.Resources>

        <ResourceDictionary>

            <my:BitmapConverter x:Key="bitmapConverter" />
            <my:WidthConverter x:Key="widthConv"/>

            <SolidColorBrush x:Key="blueDarkBrush" Color="#FF0045BC"/>
            <SolidColorBrush x:Key="blueBrush" Color="#FF6495ED"/>
            <SolidColorBrush x:Key="blueBlurBrush" Color="#606495ED"/>
            <SolidColorBrush x:Key="blueVeryBlurBrush" Color="#306495ED"/>
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF"/>
            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD"/>
            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>
            <SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
            <SolidColorBrush x:Key="DownArrowBrush" Color="#FF6495ED"/>
            <SolidColorBrush x:Key="popupWindowBackground"   Color="#ffffd5"/>
            <SolidColorBrush x:Key="popupWindowBorderBrush" Color="#30999999"/>
            <SolidColorBrush x:Key="popupWindowTextBrush" Color="#999999"/>
            <SolidColorBrush x:Key="popupButtonForeground" Color="#9FF6F877"/>

            <!-- Gradient Brushes for Image Combo Boxes -->
            <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#CCC" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF" Offset="0.0"/>
                        <GradientStop Color="#AAA" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#BBB" Offset="0.0"/>
                        <GradientStop Color="#EEE" Offset="0.1"/>
                        <GradientStop Color="#EEE" Offset="0.9"/>
                        <GradientStop Color="#FFF" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#CCC" Offset="0.0"/>
                        <GradientStop Color="#444" Offset="1.0"/>
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <DataTemplate x:Key="DisplayImageWithText">
                <Border Name="Border" SnapsToDevicePixels="true">
                    <StackPanel Orientation="Horizontal">
                        <Image VerticalAlignment="Center"
                               Margin="2"
                               Width="18"
                               Height="18"
                               Source="{Binding Image}" />
                        <TextBlock GotFocus="TextBlock_GotFocus"
                                   VerticalAlignment="Center"
                                   Margin="1,0,0,0"
                                   Text="{Binding Name}"
                                   TextWrapping="NoWrap"
                                   Opacity="0.6"
                                   TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </Border>
            </DataTemplate>

            <!-- Used for Arrow -->
            <Geometry x:Key="DownArrowGeometry">M 0 0 L 5 7 L 10 0 Z</Geometry>

            <!-- Control Templates -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border"
                            Grid.ColumnSpan="2"
                            CornerRadius="6"
                            Background="White"
                            BorderBrush="{StaticResource blueBlurBrush}"
                            BorderThickness="0"/>
                    <Path x:Name="DownArrow"
                          Grid.Column="1"
                          HorizontalAlignment="Center"
                          Margin="3,1,0,0"
                          VerticalAlignment="Center"
                          Fill="{StaticResource DownArrowBrush}"
                          Data="{StaticResource DownArrowGeometry}" />
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource blueVeryBlurBrush}"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border x:Name="PART_ContentHost" Background="{TemplateBinding Background}"/>
            </ControlTemplate>

            <!-- Styles -->
            <Style x:Key="ImageComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border Name="Border" Padding="2" Background="White" Opacity="100" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ComboBox.IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource blueBlurBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                        <Style >
                            <Setter Property="Control.Template" Value="{x:Null}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ImageComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource ImageComboBoxItem}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Border Name="br" CornerRadius="6"  BorderThickness="2" Padding="0">
                                <Grid>
                                    <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                    <ContentPresenter Name="ContentSite"
                                                      Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                      ContentTemplate = "{StaticResource DisplayImageWithText}"
                                                      ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                                      Margin="0,0,16,0"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                                      IsHitTestVisible="False" />
                                    <TextBox x:Name="PART_EditableTextBox" 
                                             Style="{x:Null}"
                                             Template="{StaticResource ComboBoxTextBox}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center"
                                             Margin="3,3,23,3"
                                             Focusable="True"
                                             Background="Transparent"
                                             Visibility="Hidden"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                        <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <Border x:Name="DropDownBorder"
                                                    Background="{StaticResource WindowBackgroundBrush}"
                                                    BorderThickness="2"
                                                    BorderBrush="{StaticResource blueBrush}"/>
                                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                <Grid x:Name="itemsGrid" Height="Auto" Width="Auto" MaxWidth="{TemplateBinding MaxWidth}">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="False">
                                    <Setter TargetName="br"  Property="BorderBrush" Value="{StaticResource blueBlurBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="br"  Property="BorderBrush" Value="{StaticResource blueBrush}"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="6"/>
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- disable ugly rectangle on focus -->
                <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                        <Style >
                            <Setter Property="Control.Template" Value="{x:Null}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>

        <Grid.Resources>

            <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>

            <Style x:Key="msCtxStyle" TargetType="ContextMenu">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Name="Border"
                                    CornerRadius="4"
                                    Background="{StaticResource WindowBackgroundBrush}"
                                    BorderBrush="{StaticResource blueBrush}"
                                    BorderThickness="2" >
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ContextMenu Opened="ContextMenu_Opened"
                         Closed="ContextMenu_Closed"
                         x:Key="ContextActionMenu"
                         TextBlock.FontSize="14"
                         VerticalOffset="0"
                         HorizontalOffset="0"
                         Style="{StaticResource msCtxStyle}" />

            <Style x:Key="SimpleListViewItem" TargetType="ListViewItem"  >
                <Setter Property="IsSelected" Value="{Binding IsChecked, Mode=TwoWay}"/>
                <EventSetter Event="ContextMenuOpening" Handler="ListViewContextMenuOpening" />
                <EventSetter Event="ContextMenuClosing" Handler="ListViewContextMenuClosing" />
                <Setter Property="ContextMenu" Value="{StaticResource ContextActionMenu}"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border Name="SpecialBorder"  Background="Transparent" RenderTransformOrigin="0.5,0.5" BorderBrush="White" BorderThickness="1" CornerRadius="6" >
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="SpecialBorder" Property="BorderBrush" Value="{StaticResource blueBlurBrush}"/>
                                    <Setter TargetName="SpecialBorder" Property="Background" Value="{StaticResource blueBlurBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter  TargetName="SpecialBorder" Property="Cursor" Value="Hand"></Setter>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="SpecialBorder" Property="BorderBrush" Value="{StaticResource blueBrush}"/>
                                    <Setter TargetName="SpecialBorder" Property="Background" Value="{StaticResource blueBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="8">
                        <Setter Property="FontSize" Value="8" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="9">
                        <Setter Property="FontSize" Value="9" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="10">
                        <Setter Property="FontSize" Value="10" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="11">
                        <Setter Property="FontSize" Value="11" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="12">
                        <Setter Property="FontSize" Value="12" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="13">
                        <Setter Property="FontSize" Value="13" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="14">
                        <Setter Property="FontSize" Value="14" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="15">
                        <Setter Property="FontSize" Value="15" />
                    </DataTrigger>
                    <DataTrigger 
                             Binding="{Binding Path=ResultsFontSize,
                             RelativeSource={RelativeSource FindAncestor,
                             AncestorType={x:Type UserControl}}}"
                             Value="16">
                        <Setter Property="FontSize" Value="16" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MenuListViewItem" TargetType="ListViewItem" >
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>

            <Style x:Key="PropertyListViewItem" TargetType="ListViewItem" >
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="myHyperlink" TargetType="Hyperlink" BasedOn="{StaticResource {x:Type Hyperlink}}">
                <Setter Property="Foreground" Value="{StaticResource blueBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource blueDarkBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <!--RowDefinition Height="80"></RowDefinition-->
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition />
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid x:Name="gridServerAndDatabase" >

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox 
                      Grid.Row="1"
                      ToolTip="Server for hunting"
                      FontSize="14"
                      GotFocus="cbServer_GotFocus"
                      LostFocus="cbServer_LostFocus"
                      PreviewKeyDown="cbServer_PreviewKeyDown"
                      Margin="2,5"
                      x:Name="cbServer"
                      VerticalContentAlignment="Center"
                      VerticalAlignment="Stretch"
                      SelectionChanged="cbServer_SelectionChanged"
                      Style="{StaticResource ImageComboBox}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel  Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Name}" Padding="10,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <ComboBox 
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      ToolTip="Database to sniff"
                      Grid.Column="1"
                      FontSize="14"
                      Style="{StaticResource ImageComboBox}"
                      GotFocus="cbDatabase_GotFocus"
                      LostFocus="cbDatabase_LostFocus"
                      PreviewKeyDown="cbDatabase_PreviewKeyDown"
                      Margin="2,5"
                      x:Name="cbDatabase"
                      VerticalContentAlignment="Center"
                      VerticalAlignment="Stretch"

                      SelectionChanged="cbDatabase_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel  Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Name}" Padding="10,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Button Grid.Row="2" Grid.Column="2"                   
                    Visibility="Visible"
                    x:Name="btnRefresh"
                    Click="RefreshDatabaseList_Click"
                    Margin="0,0,3,3"
                    VerticalAlignment="Center"
                    Focusable="False" 
                    BorderBrush="#506AA4B6"
                    ToolTip="Reload Databases and Objects"
                    BorderThickness="1"
                    Background="Transparent"
                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Image Source="{Binding Source={x:Static properties:Resources.refresh}, Converter={StaticResource bitmapConverter}}"
                       Height="18"
                       Width="18" />
            </Button>

            <Border  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"                  
                    HorizontalAlignment="Stretch"
                    MouseDown="borderText_MouseDown"
                    Background="White"
                    x:Name="borderText"
                    Margin="3,0,3,3"
                    CornerRadius="6"
                    BorderThickness="2"
                    BorderBrush="#506AA4B6">
                <DockPanel  HorizontalAlignment="Stretch" >
                    <Image Margin="2,0,0,0"
                           Name="imgSearch"
                           DockPanel.Dock="Left"
                           VerticalAlignment="Center"
                           Source="{Binding Source={x:Static properties:Resources.search}, Converter={StaticResource bitmapConverter}}"
                           Width="20"
                           Height="20"
                           Opacity="0.3" />
                    <TextBox DockPanel.Dock="Right"
                             VerticalAlignment="Center"
                             GotFocus="txtSearch_GotFocus"
                             LostFocus="txtSearch_LostFocus"
                             x:Name="txtSearch"
                             PreviewKeyDown="txtSearch_PreviewKeyDown"
                             KeyDown="txtSearch_KeyDown"
                             BorderThickness="0"
                             PreviewMouseLeftButtonDown="txtSearch_SelectivelyIgnoreMouseButton"
                             MouseDoubleClick="txtSearch_SelectSearchText"
                             Margin="0,2,5,2"
                             FontSize="16"
                             TextChanged="txtSearch_TextChanged" />
                </DockPanel>
            </Border>

            <!--Popup x:Name="popupUpdate" Placement="Center" AllowsTransparency="True" Focusable="False"  PopupAnimation="Slide"  PlacementTarget="{Binding ElementName=gridServerAndDatabase}"-->
            <Border Grid.Row="0" Grid.ColumnSpan="3" Visibility="Collapsed"
                   Height="36"
                   Background="{StaticResource popupWindowBackground}"

                    VerticalAlignment="Stretch"
                     BorderThickness="0 0 0 2"
                     BorderBrush="{StaticResource popupWindowBorderBrush}"
                    x:Name="popupBorder">
                <DockPanel 
                           LastChildFill="True"
                           Margin="10,0,10,0">


                    <Button  
                        Margin="5,0,0,0"
                        DockPanel.Dock="Right"
                        Visibility="Visible"
                        x:Name="btnCloseUpdatePopup"
                        Click="CloseUpdate_Click"
            
                        VerticalAlignment="Center"
                        Focusable="False" 
                        BorderBrush="Transparent"
                        ToolTip="Ignore that update"
                        BorderThickness="1"
                        Background="Transparent"                        
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">

                        <Image  Source="{Binding Source={x:Static properties:Resources.close}, 
                                        Converter={StaticResource bitmapConverter}}"
                                        VerticalAlignment="Center"                                    
                                        Height="18"
                                        Width="18" />

                    </Button>

                    <Button  
                        Margin="5,0,0,0"
                        DockPanel.Dock="Right"
                        Visibility="Visible"
                        x:Name="btnGetUpdate"
                        Click="DownloadUpdate_Click"
  
                        VerticalAlignment="Center"
                        Focusable="False" 
                        BorderBrush="Transparent"
                        ToolTip="Download this update"
                        BorderThickness="1"
                        Background="Transparent"                        
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">

                        <Image  Source="{Binding Source={x:Static properties:Resources.download}, 
                                        Converter={StaticResource bitmapConverter}}"
                                        VerticalAlignment="Center"                                     
                                        Height="18"
                                        Width="18" />


                    </Button>




                    <TextBlock
                     
                        TextTrimming="CharacterEllipsis"
                        HorizontalAlignment="Stretch"
                        DockPanel.Dock="Left"
                        Margin="0,0,10,0" FontSize="16"
                        x:Name="popupUpdateText" Background="Transparent"    VerticalAlignment="Center" Foreground="{StaticResource popupWindowTextBrush}" >
                        New version is available
                    </TextBlock>


                </DockPanel>
            </Border>
            <!--/Popup-->

        </Grid>

        <Grid Grid.Row="1" x:Name="splitterGrid">

            <Grid.RowDefinitions>
                <RowDefinition Height="55*" />
                <RowDefinition Height="152*" />
            </Grid.RowDefinitions>

            <Grid x:Name="gridEmptyResult" Visibility="Collapsed" Grid.RowSpan="2">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <StackPanel Orientation="Horizontal" Margin="0">
                        <Image Width="24"
                               Height="24"
                               Margin="15,5,5,5"
                               Source="{Binding Source={x:Static properties:Resources.warning}, Converter={StaticResource bitmapConverter}}" />
                        <TextBlock VerticalAlignment="Center" FontSize="16">No results found</TextBlock>
                    </StackPanel>
                    <TextBlock VerticalAlignment="Center" Margin="5,2,0,0" FontSize="16"  x:Name="txtEmptyLine1">Try to <Hyperlink FontSize="16"  Click="Refresh_Click">Refresh</Hyperlink> database</TextBlock>
                </StackPanel>
            </Grid>

            <ListView Margin="3,2,2,2"
                      PreviewKeyDown="itemsControl_PreviewKeyDown"
                      x:Name="itemsControl"
                      BorderThickness="0"
                      ItemContainerStyle="{StaticResource SimpleListViewItem}"
                      SelectionChanged="ItemsControlSelectionChanged1" Grid.RowSpan="2">
                <ListView.Resources />
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Button Tag="{Binding}"
                                    ToolTip="Locate in Object Explorer"
                                    Focusable="False"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    Click="btnNavigationClick">
                                <Image Tag="{Binding}"
                                       Name="navImage"
                                       Source="{Binding Image}"
                                       HorizontalAlignment="Center"
                                       Height="18"
                                       Width="18" />
                            </Button>
                            <DockPanel Grid.Column="1"
                                       Name="myAction"
                                       Grid.Row="0"
                                       LastChildFill="True"
                                       Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollContentPresenter}}, Path=ActualWidth,Converter={StaticResource widthConv}, ConverterParameter=38}">
                                <my:HtmlTextBlock
                                    DockPanel.Dock="Left"
                                    x:Name="myEnityText"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="NoWrap"
                                    Background="Transparent"
                                    Tag="{Binding}"
                                    Grid.Column="1"
                                    Margin="0,0,0,0"
                    
                                    ResultItem="{Binding .}"
                                    DoHighlight="{Binding IsChecked}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch"
                                    MouseDown="TextBlock_MouseDown"
                                    MouseUp="myEnityText_MouseUp"
                                    MouseMove="TextBlock_MouseMove"
                                    />
                            </DockPanel>
                        </Grid>
                        <DataTemplate.Triggers />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

        </Grid>

        <StackPanel Grid.Row="2" Orientation="Horizontal">

            <TextBlock VerticalAlignment="Center" Margin="5,0,0,0" x:Name="txtOptionPermanent"> <Hyperlink Foreground="#6495ED"  Click="Options_Click">Options</Hyperlink></TextBlock>
            <TextBlock  VerticalAlignment="Center" Margin="15,0,0,0" x:Name="txtStatusTest">status</TextBlock>
        </StackPanel>

    </Grid>

</UserControl>